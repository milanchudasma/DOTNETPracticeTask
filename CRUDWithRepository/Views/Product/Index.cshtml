@model IEnumerable<CRUDWithRepository.core.Product>

    @{
        ViewData["Title"] = "Product's List";
    }

<h3>@ViewData["Title"]</h3>
<form>

<button asp-action="CreateOrEdit" asp-controller="Product" class="btn btn-primary mb-3">Create</button>
<table class="table table-active table-bordered table-hover table-responsive">
    <thead>
        <tr class="table-active">
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Qty)
            </th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @if(Model != null && Model.Any())
        {
            @foreach(var prodcut in Model)
            {
                <tr>
                    <td>@prodcut.Id</td>
                    <td>@prodcut.ProductName</td>
                    <td>@prodcut.Price</td>
                    <td>@prodcut.Qty</td>
                    <td class="text-center">
                        <div class="btn-group btn-group-sm">
                            <a asp-controller="Product" asp-action="CreateOrEdit" asp-route-id=@prodcut.Id class="btn btn-success">Edit</a>
                            <a asp-controller="Product" asp-action="Delete" asp-route-id=@prodcut.Id class="btn btn-danger">Delete</a>
                        </div>
                    </td>

                </tr>
            }
        }
        else
        {
            <tr>
                <td colspan="5">No Product Availbale at this moment</td>
            </tr>
        }
    </tbody>
</table>


</form>