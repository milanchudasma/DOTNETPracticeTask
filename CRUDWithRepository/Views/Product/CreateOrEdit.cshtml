@model CRUDWithRepository.core.Product


@{
    ViewData["title"] =( Model != null && Model.Id == 0 ) ? "Create Product" : "Modify Product";
}
<form method="post" action="CreateOrEdit">
        <div class="card">
            <div class="card-header bg-info">
                <h2>@ViewData["title"]</h2>
            
            </div>
            <div class="card-body">
                <input type="hidden" asp-for="Id"/>
                <div class="form-floating mb-2">
                    <input asp-for="ProductName" class="form-control" />
                    <label asp-for="ProductName"></label>
                    <span asp-validation-for="ProductName" class="text-danger"></span>
                </div>
                 <div class="form-floating mb-2">
                    <input asp-for="Price" class="form-control" />
                    <label asp-for="Price"></label>
                    <span asp-validation-for="Price" class="text-danger"></span>
                </div>
            <div class="form-floating mb-2">
                <input asp-for="Qty" class="form-control" />
                <label asp-for="Qty"></label>
                <span asp-validation-for="Qty" class="text-danger"></span>
            </div>
            <div>
                @if(Model != null && Model.Id == 0)
                {
                    <div class="col-lg-12 d-grid">
                        <button type="submit" class="btn btn-primary">Submit</button>
                    </div>
                }
                else
                {
                  <div class="col-lg-12 d-grid">
                        <button type="submit" class="btn btn-success">Update</button>
                    </div>  
                }

            </div>
            </div>
        </div>
</form>
@section Scripts{
    @{
        //jquery all validation is here
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}